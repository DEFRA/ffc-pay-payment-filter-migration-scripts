INSERT INTO "completedPaymentRequests"(
  "paymentRequestId",
  "schemeId",
  ledger,
  "sourceSystem",
  "deliveryBody",
  "invoiceNumber",
  frn,
  sbi,
  "agreementNumber",
  "contractNumber",
  currency,
  schedule,
  "dueDate",
  value,
  acknowledged,
  "marketingYear",
  "debtType",
  "recoveryDate",
  "originalSettlementDate",
  "originalInvoiceNumber",
  "invoiceCorrectionReference",
  submitted,
  "paymentRequestNumber",
  invalid,
  "settledValue",
  "lastSettlement",
  "referenceId",
  "correlationId",
  batch,
  "paymentType",
  pillar,
  "exchangeRate",
  "eventDate",
  vendor,
  trader,
  "claimDate",
  migrated,
  "migrationId")
SELECT
  "paymentRequests"."paymentRequestId",
  "v2TempCompletedPaymentRequests"."schemeId",
  "v2TempCompletedPaymentRequests".ledger,
  "v2TempCompletedPaymentRequests"."sourceSystem",
  "v2TempCompletedPaymentRequests"."deliveryBody",
  "v2TempCompletedPaymentRequests"."invoiceNumber",
  "v2TempCompletedPaymentRequests".frn,
  "v2TempCompletedPaymentRequests".sbi,
  "v2TempCompletedPaymentRequests"."agreementNumber",
  "v2TempCompletedPaymentRequests"."contractNumber",
  "v2TempCompletedPaymentRequests".currency,
  "v2TempCompletedPaymentRequests".schedule,
  "v2TempCompletedPaymentRequests"."dueDate",
  "v2TempCompletedPaymentRequests".value,
  "v2TempCompletedPaymentRequests".acknowledged,
  "v2TempCompletedPaymentRequests"."marketingYear",
  "v2TempCompletedPaymentRequests"."debtType",
  TO_CHAR("v2TempCompletedPaymentRequests"."recoveryDate",
  'DD/MM/YYYY') AS "recoveryDate",
  TO_CHAR("v2TempCompletedPaymentRequests"."originalSettlementDate",
  'DD/MM/YYYY') AS "originalSettlementDate",
  "v2TempCompletedPaymentRequests"."originalInvoiceNumber",
  "v2TempCompletedPaymentRequests"."invoiceCorrectionReference",
  "v2TempCompletedPaymentRequests".submitted,
  "v2TempCompletedPaymentRequests"."paymentRequestNumber",
  "v2TempCompletedPaymentRequests".invalid,
  "v2TempCompletedPaymentRequests"."settledValue",
  "v2TempCompletedPaymentRequests"."lastSettlement",
  "v2TempCompletedPaymentRequests"."referenceId",
  "v2TempCompletedPaymentRequests"."correlationId",
  "v2TempCompletedPaymentRequests".batch,
  "v2TempCompletedPaymentRequests"."paymentType",
  "v2TempCompletedPaymentRequests".pillar,
  "v2TempCompletedPaymentRequests"."exchangeRate",
  "v2TempCompletedPaymentRequests"."eventDate",
  "v2TempCompletedPaymentRequests".vendor,
  "v2TempCompletedPaymentRequests".trader,
  "v2TempCompletedPaymentRequests"."claimDate",
  "paymentRequests".migrated,
  "paymentRequests"."migrationId"
FROM "v2TempCompletedPaymentRequests"
LEFT JOIN "completedPaymentRequests"
  ON "v2TempCompletedPaymentRequests"."migrationId" = "completedPaymentRequests"."migrationId"
INNER JOIN "paymentRequests"
  ON "v2TempCompletedPaymentRequests"."migrationId" = "paymentRequests"."migrationId"
WHERE "completedPaymentRequests"."migrationId" IS NULL
  AND "v2TempCompletedPaymentRequests" != 7;